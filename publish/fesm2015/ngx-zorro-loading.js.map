{"version":3,"file":"ngx-zorro-loading.js","sources":["../../components/loading/loading.component.ts","../../components/loading/loading.component.html","../../components/loading/loading.module.ts","../../components/loading/ngx-zorro-loading.ts"],"sourcesContent":["import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\r\n\r\n@Component({\r\n    selector: 'ngx-loading',\r\n    templateUrl: './loading.component.html',\r\n    styleUrls: ['./loading.component.scss'],\r\n    providers: [NzDestroyService],\r\n})\r\nexport class LoadingComponent implements OnInit, OnChanges, OnDestroy {\r\n    /**\r\n     * 是否显示(支持双向绑定)\r\n     */\r\n    @Input() visible = false;\r\n    @Output() visibleChange = new EventEmitter<boolean>();\r\n    /**\r\n     * 提示内容\r\n     */\r\n    @Input() tip = '加载中…';\r\n    /**\r\n     * 是否行内模式\r\n     */\r\n    @Input() inline = false;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private overlay: Overlay,\r\n        private viewContainerRef: ViewContainerRef,\r\n        private destroy: NzDestroyService,\r\n        private renderer: Renderer2\r\n    ) {}\r\n\r\n    @ViewChild('loadingTemplate', { static: true }) loadingTemplate!: TemplateRef<ElementRef>;\r\n    /**\r\n     * 浮层对象\r\n     */\r\n    private overlayRef?: OverlayRef | null;\r\n    /**\r\n     * 渲染模板\r\n     */\r\n    private templatePortal?: TemplatePortal;\r\n    /**\r\n     * 父元素大小改变监听对象\r\n     */\r\n    private resizeObserver?: ResizeObserver;\r\n\r\n    ngOnInit(): void {}\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        const { visible } = changes;\r\n        if (visible) {\r\n            const value = changes.visible.currentValue;\r\n            if (value) {\r\n                this.open();\r\n            } else {\r\n                this.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.disposeOverlay();\r\n    }\r\n\r\n    open() {\r\n        this.attachOverlay();\r\n        this.visible = true;\r\n        this.visibleChange.emit(true);\r\n        this.updateOverlayStyle();\r\n        this.updateBodyOverflow();\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        this.visibleChange.emit(false);\r\n        this.updateOverlayStyle();\r\n        this.updateBodyOverflow();\r\n        this.disposeOverlay();\r\n    }\r\n\r\n    private attachOverlay(): void {\r\n        this.templatePortal = new TemplatePortal(this.loadingTemplate, this.viewContainerRef);\r\n        this.overlayRef = this.overlay.create(this.getOverlayConfig());\r\n\r\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\r\n            this.overlayRef\r\n                .attachments()\r\n                .pipe(takeUntil(this.destroy))\r\n                .subscribe(() => {\r\n                    this.notFullOverlay();\r\n                    this.parentResizeObserver();\r\n                });\r\n            this.overlayRef.attach(this.templatePortal);\r\n        }\r\n    }\r\n\r\n    private getOverlayConfig(): OverlayConfig {\r\n        const positionStrategy = this.overlay.position().global();\r\n        return new OverlayConfig({\r\n            positionStrategy,\r\n            hasBackdrop: false,\r\n            disposeOnNavigation: true,\r\n            width: '100vw',\r\n            height: '100vh',\r\n        });\r\n    }\r\n\r\n    private disposeOverlay(): void {\r\n        this.overlayRef?.dispose();\r\n        this.overlayRef = null;\r\n        this.resizeObserver?.disconnect();\r\n    }\r\n\r\n    private updateOverlayStyle(): void {\r\n        if (this.overlayRef && this.overlayRef.overlayElement) {\r\n            this.renderer.setStyle(this.overlayRef.overlayElement, 'pointer-events', this.visible ? 'auto' : 'none');\r\n        }\r\n    }\r\n\r\n    private updateBodyOverflow(): void {\r\n        if (this.overlayRef) {\r\n            if (this.visible) {\r\n                this.overlayRef.getConfig().scrollStrategy!.enable();\r\n            } else {\r\n                this.overlayRef.getConfig().scrollStrategy!.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    private notFullOverlay(): void {\r\n        if (!this.inline) {\r\n            return;\r\n        }\r\n        if (this.overlayRef) {\r\n            const parentElement = this.elementRef.nativeElement.parentElement;\r\n            if (!parentElement) {\r\n                return;\r\n            }\r\n            this.overlayRef.updateSize({\r\n                width: parentElement.clientWidth,\r\n                height: parentElement.clientHeight,\r\n            });\r\n            const positionStrategy = this.overlay\r\n                .position()\r\n                .flexibleConnectedTo(parentElement)\r\n                .withPositions([\r\n                    {\r\n                        originX: 'start',\r\n                        originY: 'top',\r\n                        overlayX: 'start',\r\n                        overlayY: 'top',\r\n                        offsetX: 0,\r\n                        offsetY: 0,\r\n                    },\r\n                ]);\r\n            this.overlayRef.updatePositionStrategy(positionStrategy);\r\n        }\r\n    }\r\n\r\n    private parentResizeObserver(): void {\r\n        if (!this.inline) {\r\n            return;\r\n        }\r\n        if (this.overlayRef) {\r\n            const parentElement = this.elementRef.nativeElement.parentElement;\r\n            if (!parentElement) {\r\n                return;\r\n            }\r\n            this.resizeObserver = new ResizeObserver(([entry]) => {\r\n                // const { width, height } = entry.contentRect;\r\n                // 处理div大小变化的逻辑\r\n                this.notFullOverlay();\r\n            });\r\n            // 开始监听父元素的大小变化\r\n            this.resizeObserver.observe(parentElement);\r\n        }\r\n    }\r\n}\r\n","<ng-template #loadingTemplate>\r\n    <div class=\"loading-conent\">\r\n        <div class=\"loading-spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n        <div class=\"loading-tip\">{{ tip }}</div>\r\n    </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoadingComponent } from './loading.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n@NgModule({\r\n    declarations: [LoadingComponent],\r\n    imports: [CommonModule, OverlayModule, PortalModule],\r\n    exports: [LoadingComponent],\r\n})\r\nexport class NgxLoadingModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;MA0Ba,gBAAgB,CAAA;IAezB,WACY,CAAA,UAAsB,EACtB,OAAgB,EAChB,gBAAkC,EAClC,OAAyB,EACzB,QAAmB,EAAA;QAJnB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QACtB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;QAChB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;QACzB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AAnB/B;;AAEG;QACM,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;AACf,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAW,CAAC;AACtD;;AAEG;QACM,IAAG,CAAA,GAAA,GAAG,MAAM,CAAC;AACtB;;AAEG;QACM,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;KAQpB;AAgBJ,IAAA,QAAQ,MAAW;AAEnB,IAAA,WAAW,CAAC,OAAsB,EAAA;AAC9B,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;AAC5B,QAAA,IAAI,OAAO,EAAE;AACT,YAAA,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;AAC3C,YAAA,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,IAAI,EAAE,CAAC;AACf,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,KAAK,EAAE,CAAC;AAChB,aAAA;AACJ,SAAA;KACJ;IAED,WAAW,GAAA;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAED,IAAI,GAAA;QACA,IAAI,CAAC,aAAa,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;IAED,KAAK,GAAA;AACD,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAEO,aAAa,GAAA;AACjB,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACtF,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAE/D,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE;AACnD,YAAA,IAAI,CAAC,UAAU;AACV,iBAAA,WAAW,EAAE;AACb,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC7B,SAAS,CAAC,MAAK;gBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAChC,aAAC,CAAC,CAAC;YACP,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC/C,SAAA;KACJ;IAEO,gBAAgB,GAAA;QACpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;QAC1D,OAAO,IAAI,aAAa,CAAC;YACrB,gBAAgB;AAChB,YAAA,WAAW,EAAE,KAAK;AAClB,YAAA,mBAAmB,EAAE,IAAI;AACzB,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,MAAM,EAAE,OAAO;AAClB,SAAA,CAAC,CAAC;KACN;IAEO,cAAc,GAAA;;AAClB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAC;KACrC;IAEO,kBAAkB,GAAA;QACtB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;YACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;AAC5G,SAAA;KACJ;IAEO,kBAAkB,GAAA;QACtB,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,cAAe,CAAC,MAAM,EAAE,CAAC;AACxD,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,cAAe,CAAC,OAAO,EAAE,CAAC;AACzD,aAAA;AACJ,SAAA;KACJ;IAEO,cAAc,GAAA;AAClB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;AACV,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC;YAClE,IAAI,CAAC,aAAa,EAAE;gBAChB,OAAO;AACV,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACvB,KAAK,EAAE,aAAa,CAAC,WAAW;gBAChC,MAAM,EAAE,aAAa,CAAC,YAAY;AACrC,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO;AAChC,iBAAA,QAAQ,EAAE;iBACV,mBAAmB,CAAC,aAAa,CAAC;AAClC,iBAAA,aAAa,CAAC;AACX,gBAAA;AACI,oBAAA,OAAO,EAAE,OAAO;AAChB,oBAAA,OAAO,EAAE,KAAK;AACd,oBAAA,QAAQ,EAAE,OAAO;AACjB,oBAAA,QAAQ,EAAE,KAAK;AACf,oBAAA,OAAO,EAAE,CAAC;AACV,oBAAA,OAAO,EAAE,CAAC;AACb,iBAAA;AACJ,aAAA,CAAC,CAAC;AACP,YAAA,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;AAC5D,SAAA;KACJ;IAEO,oBAAoB,GAAA;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;AACV,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC;YAClE,IAAI,CAAC,aAAa,EAAE;gBAChB,OAAO;AACV,aAAA;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,KAAI;;;gBAGjD,IAAI,CAAC,cAAc,EAAE,CAAC;AAC1B,aAAC,CAAC,CAAC;;AAEH,YAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC9C,SAAA;KACJ;;8GAvKQ,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,EAFd,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,SAAA,EAAA,CAAC,gBAAgB,CAAC,iLCxBjC,iiBAmBA,EAAA,MAAA,EAAA,CAAA,slDAAA,CAAA,EAAA,CAAA,CAAA;4FDOa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAN5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,WAAW,EAAE,0BAA0B;oBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;oBACvC,SAAS,EAAE,CAAC,gBAAgB,CAAC;AAChC,iBAAA,CAAA;6MAKY,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACI,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBAIE,GAAG,EAAA,CAAA;sBAAX,KAAK;gBAIG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAU0C,eAAe,EAAA,CAAA;sBAA9D,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MEtCrC,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAJV,gBAAgB,CACrB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,aAAa,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CACzC,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAEjB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAHhB,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAG3C,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,YAAY,EAAE,CAAC,gBAAgB,CAAC;AAChC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC;oBACpD,OAAO,EAAE,CAAC,gBAAgB,CAAC;AAC9B,iBAAA,CAAA;;;ACVD;;AAEG;;;;"}